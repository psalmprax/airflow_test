name: Build image for Production
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout Files
        uses: actions/checkout@v2

      - name: new ssh proxy
        uses: appleboy/ssh-action@master
        with:
          proxy_key: ${{ secrets.EC2_SSH_KEY }}
          proxy_host: ${{ secrets.HOST_DNS }}
          proxy_username: ${{ secrets.USERNAME }}
          host: ${{ secrets.TARGET_DNS }}
          username: ${{ secrets.TARGET_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            FILE=/home/ubuntu/airflow_test/docker-compose.yaml
            if ! sudo docker info > /dev/null 2>&1; then
              sudo apt-get update -y
          
              # https://docs.docker.com/engine/install/ubuntu/
              sudo apt-get install \
                  ca-certificates \
                  curl \
                  gnupg \
                  lsb-release
          
              # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              sudo mkdir -p /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

          
              #              echo \
              #                "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
              #                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                          
              echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
              sudo apt-get update -y
          
              # sudo apt-get install docker-ce docker-ce-cli containerd.io -y
              sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
          
              docker --version
          
              # https://docs.docker.com/compose/install/
              #              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          
              #              sudo chmod +x /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
          
              docker-compose --version
              sudo apt-get install postgresql-client -y
            fi
            if [ -f "$FILE" ]; then
                sudo docker-compose -f /home/ubuntu/airflow_test/docker-compose.yaml down -v 2> /dev/null && sudo docker system prune -a -f
            fi
            whoami  && sudo rm -rf airflow_test &&
            pwd && sudo git clone https://github.com/psalmprax/airflow_test.git && ls -ltra &&
            sudo docker-compose -f /home/ubuntu/airflow_test/docker-compose.yaml --compatibility up --build -d &&
            sudo docker-compose -f /home/ubuntu/airflow_test/docker-compose.yaml down 2> /dev/null &&
            sudo docker ps -a && sudo chmod -R 777 /home/ubuntu/airflow_test/logs/ &&
            sudo chown -R ubuntu:ubuntu /home/ubuntu/airflow_test/logs/ &&
            sudo chmod -R 777 /home/ubuntu/airflow_test/plugins/ && 
            sudo chown -R ubuntu:ubuntu /home/ubuntu/airflow_test/plugins/ && 
            sudo docker-compose -f /home/ubuntu/airflow_test/docker-compose.yaml --compatibility up --build -d &&
            sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key FDC247B7 && 
            echo 'deb https://repo.windscribe.com/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/windscribe-repo.list && 
            sudo apt-get update -Y && apt-get install windscribe-cli && 
            sudo dpkg -i /home/ubuntu/airflow_test/dags/windscribe_2.4.8_beta_amd64.deb &&
            sudo apt install expect -y &&
            
            #!/usr/bin/expect -f
            set timeout -1
            spawn windscribe login
            
            expect "Windscribe Username:"
            send "psalmprax\n"
            
            expect "Windscribe Password:"
            send "Single123.\n"
            
            expect eof
            
            windscribe connect
            

#            ls -ltra && sudo docker-compose -f /home/ubuntu/airflow_test/docker-compose.yaml down -v 2> /dev/null &&
#            exit 0 && sudo docker system prune -a -f && ll &&
#            && sudo docker-compose up --build -d
#            sudo docker-compose down -v && sudo docker system prune -a -f &&
#            && cd .. && rm -rf airflow_test 2> /dev/null


#############  data warehouse troubleshoot  #####################################
# https://aws.amazon.com/premiumsupport/knowledge-center/rds-connectivity-instance-subnet-vpc/
# https://aws.amazon.com/premiumsupport/knowledge-center/rds-connectivity-instance-subnet-vpc/